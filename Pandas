{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyM0btFNeXYA1DUNQokSgl3M"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"yqKasJ6q80gg"},"outputs":[],"source":["import numpy as np\n","import pandas as pd\n","user_data={\n","    \"marksA\":np.random.randint(1,10,5),\n","    \"marksB\":np.random.randint(50,100,5),\n","    \"marksC\":np.random.randint(1,100,5),\n","}"]},{"cell_type":"code","source":["np.random.randint(1,100,10)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"AEI27VSR96d5","executionInfo":{"status":"ok","timestamp":1686731164488,"user_tz":-330,"elapsed":545,"user":{"displayName":"HARSH KUMAR SAHU 21BSA10163","userId":"03728819450456949834"}},"outputId":"e6481183-27ea-4bdc-e21f-ada7ff4e63cd"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([73, 87, 17, 43, 39, 17, 75,  8, 58, 22])"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["user_data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"W0RdKk8qAzZU","executionInfo":{"status":"ok","timestamp":1686731186211,"user_tz":-330,"elapsed":489,"user":{"displayName":"HARSH KUMAR SAHU 21BSA10163","userId":"03728819450456949834"}},"outputId":"b704aeec-1de5-4650-8acc-88e2b7dac181"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'marksA': array([5, 6, 1, 1, 4]),\n"," 'marksB': array([82, 69, 51, 84, 99]),\n"," 'marksC': array([38, 35, 37, 29, 28])}"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["df=pd.DataFrame(user_data)\n","print(df)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Sy619llTA9Xm","executionInfo":{"status":"ok","timestamp":1686731250547,"user_tz":-330,"elapsed":483,"user":{"displayName":"HARSH KUMAR SAHU 21BSA10163","userId":"03728819450456949834"}},"outputId":"cfc86f10-3297-4339-e66c-9d5acfc21284"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["   marksA  marksB  marksC\n","0       5      82      38\n","1       6      69      35\n","2       1      51      37\n","3       1      84      29\n","4       4      99      28\n"]}]},{"cell_type":"code","source":["df.head(n=3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"gFiuOytyBKCQ","executionInfo":{"status":"ok","timestamp":1686731284305,"user_tz":-330,"elapsed":656,"user":{"displayName":"HARSH KUMAR SAHU 21BSA10163","userId":"03728819450456949834"}},"outputId":"62ca8c77-0530-4b84-c68a-ef68846b870a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   marksA  marksB  marksC\n","0       5      82      38\n","1       6      69      35\n","2       1      51      37"],"text/html":["\n","  <div id=\"df-31c9a1f3-52ed-4c07-a767-4b6b78d4681e\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>marksA</th>\n","      <th>marksB</th>\n","      <th>marksC</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>5</td>\n","      <td>82</td>\n","      <td>38</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>6</td>\n","      <td>69</td>\n","      <td>35</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>51</td>\n","      <td>37</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-31c9a1f3-52ed-4c07-a767-4b6b78d4681e')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-31c9a1f3-52ed-4c07-a767-4b6b78d4681e button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-31c9a1f3-52ed-4c07-a767-4b6b78d4681e');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["df.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3sqBXUw_BOpW","executionInfo":{"status":"ok","timestamp":1686731296867,"user_tz":-330,"elapsed":719,"user":{"displayName":"HARSH KUMAR SAHU 21BSA10163","userId":"03728819450456949834"}},"outputId":"73f46526-348b-486a-c7f5-4412512ff6da"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['marksA', 'marksB', 'marksC'], dtype='object')"]},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["  df.to_csv('marks.csv')"],"metadata":{"id":"j53SUmpZBSwM"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["my_data=pd.read_csv('marks.csv')\n","my_data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"gFZI7x6cCJ6C","executionInfo":{"status":"ok","timestamp":1686731562905,"user_tz":-330,"elapsed":12,"user":{"displayName":"HARSH KUMAR SAHU 21BSA10163","userId":"03728819450456949834"}},"outputId":"d17fdf66-023f-46c7-e3ea-9dc62416db70"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Unnamed: 0  marksA  marksB  marksC\n","0           0       5      82      38\n","1           1       6      69      35\n","2           2       1      51      37\n","3           3       1      84      29\n","4           4       4      99      28"],"text/html":["\n","  <div id=\"df-ca57044a-52a7-4fca-a66f-9f601ed964f6\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>marksA</th>\n","      <th>marksB</th>\n","      <th>marksC</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>5</td>\n","      <td>82</td>\n","      <td>38</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>6</td>\n","      <td>69</td>\n","      <td>35</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>51</td>\n","      <td>37</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>84</td>\n","      <td>29</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>99</td>\n","      <td>28</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ca57044a-52a7-4fca-a66f-9f601ed964f6')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-ca57044a-52a7-4fca-a66f-9f601ed964f6 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-ca57044a-52a7-4fca-a66f-9f601ed964f6');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["my_data.drop(columns=['unnamed: 0'])\n","my_data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":345},"id":"g7xTh9QrCRjr","executionInfo":{"status":"error","timestamp":1686731612150,"user_tz":-330,"elapsed":4,"user":{"displayName":"HARSH KUMAR SAHU 21BSA10163","userId":"03728819450456949834"}},"outputId":"5151ca39-e78d-43c6-9088-a3b7e28b73fb"},"execution_count":null,"outputs":[{"output_type":"error","ename":"KeyError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)","\u001b[0;32m<ipython-input-17-f12a44cce81d>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mmy_data\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdrop\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'unnamed: 0'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0mmy_data\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/util/_decorators.py\u001b[0m in \u001b[0;36mwrapper\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    329\u001b[0m                     \u001b[0mstacklevel\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mfind_stack_level\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    330\u001b[0m                 )\n\u001b[0;32m--> 331\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    332\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    333\u001b[0m         \u001b[0;31m# error: \"Callable[[VarArg(Any), KwArg(Any)], Any]\" has no\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/frame.py\u001b[0m in \u001b[0;36mdrop\u001b[0;34m(self, labels, axis, index, columns, level, inplace, errors)\u001b[0m\n\u001b[1;32m   5397\u001b[0m                 \u001b[0mweight\u001b[0m  \u001b[0;36m1.0\u001b[0m     \u001b[0;36m0.8\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   5398\u001b[0m         \"\"\"\n\u001b[0;32m-> 5399\u001b[0;31m         return super().drop(\n\u001b[0m\u001b[1;32m   5400\u001b[0m             \u001b[0mlabels\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mlabels\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   5401\u001b[0m             \u001b[0maxis\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0maxis\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/util/_decorators.py\u001b[0m in \u001b[0;36mwrapper\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    329\u001b[0m                     \u001b[0mstacklevel\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mfind_stack_level\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    330\u001b[0m                 )\n\u001b[0;32m--> 331\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    332\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    333\u001b[0m         \u001b[0;31m# error: \"Callable[[VarArg(Any), KwArg(Any)], Any]\" has no\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/generic.py\u001b[0m in \u001b[0;36mdrop\u001b[0;34m(self, labels, axis, index, columns, level, inplace, errors)\u001b[0m\n\u001b[1;32m   4503\u001b[0m         \u001b[0;32mfor\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlabels\u001b[0m \u001b[0;32min\u001b[0m \u001b[0maxes\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mitems\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4504\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mlabels\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 4505\u001b[0;31m                 \u001b[0mobj\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mobj\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_drop_axis\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlabels\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlevel\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mlevel\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   4506\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4507\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0minplace\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/generic.py\u001b[0m in \u001b[0;36m_drop_axis\u001b[0;34m(self, labels, axis, level, errors, only_slice)\u001b[0m\n\u001b[1;32m   4544\u001b[0m                 \u001b[0mnew_axis\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdrop\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlabels\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlevel\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mlevel\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4545\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 4546\u001b[0;31m                 \u001b[0mnew_axis\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdrop\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlabels\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   4547\u001b[0m             \u001b[0mindexer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_indexer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnew_axis\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4548\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36mdrop\u001b[0;34m(self, labels, errors)\u001b[0m\n\u001b[1;32m   6932\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mmask\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0many\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   6933\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0merrors\u001b[0m \u001b[0;34m!=\u001b[0m \u001b[0;34m\"ignore\"\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 6934\u001b[0;31m                 \u001b[0;32mraise\u001b[0m \u001b[0mKeyError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34mf\"{list(labels[mask])} not found in axis\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   6935\u001b[0m             \u001b[0mindexer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mindexer\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m~\u001b[0m\u001b[0mmask\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   6936\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdelete\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mindexer\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyError\u001b[0m: \"['unnamed: 0'] not found in axis\""]}]},{"cell_type":"code","source":["my_data.describe( )"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"-dbBobzjCdRu","executionInfo":{"status":"ok","timestamp":1686731649220,"user_tz":-330,"elapsed":520,"user":{"displayName":"HARSH KUMAR SAHU 21BSA10163","userId":"03728819450456949834"}},"outputId":"d6019dc0-a805-4795-c4fa-0b16fb2d6feb"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       Unnamed: 0    marksA     marksB     marksC\n","count    5.000000  5.000000   5.000000   5.000000\n","mean     2.000000  3.400000  77.000000  33.400000\n","std      1.581139  2.302173  18.013884   4.615192\n","min      0.000000  1.000000  51.000000  28.000000\n","25%      1.000000  1.000000  69.000000  29.000000\n","50%      2.000000  4.000000  82.000000  35.000000\n","75%      3.000000  5.000000  84.000000  37.000000\n","max      4.000000  6.000000  99.000000  38.000000"],"text/html":["\n","  <div id=\"df-7205857f-53a5-4929-93b0-8c7931b14f6a\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>marksA</th>\n","      <th>marksB</th>\n","      <th>marksC</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>5.000000</td>\n","      <td>5.000000</td>\n","      <td>5.000000</td>\n","      <td>5.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>2.000000</td>\n","      <td>3.400000</td>\n","      <td>77.000000</td>\n","      <td>33.400000</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>1.581139</td>\n","      <td>2.302173</td>\n","      <td>18.013884</td>\n","      <td>4.615192</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>51.000000</td>\n","      <td>28.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>69.000000</td>\n","      <td>29.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>2.000000</td>\n","      <td>4.000000</td>\n","      <td>82.000000</td>\n","      <td>35.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>3.000000</td>\n","      <td>5.000000</td>\n","      <td>84.000000</td>\n","      <td>37.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>4.000000</td>\n","      <td>6.000000</td>\n","      <td>99.000000</td>\n","      <td>38.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7205857f-53a5-4929-93b0-8c7931b14f6a')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-7205857f-53a5-4929-93b0-8c7931b14f6a button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-7205857f-53a5-4929-93b0-8c7931b14f6a');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":["my_data.tail(n=3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"uusiR9HzDWFL","executionInfo":{"status":"ok","timestamp":1686731957448,"user_tz":-330,"elapsed":798,"user":{"displayName":"HARSH KUMAR SAHU 21BSA10163","userId":"03728819450456949834"}},"outputId":"2dd75bf4-b231-4b4d-dad2-6b30368fb2f1"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Unnamed: 0  marksA  marksB  marksC\n","2           2       1      51      37\n","3           3       1      84      29\n","4           4       4      99      28"],"text/html":["\n","  <div id=\"df-7928db05-9234-491f-a118-a9744830192d\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>marksA</th>\n","      <th>marksB</th>\n","      <th>marksC</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>51</td>\n","      <td>37</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>84</td>\n","      <td>29</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>99</td>\n","      <td>28</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7928db05-9234-491f-a118-a9744830192d')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-7928db05-9234-491f-a118-a9744830192d button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-7928db05-9234-491f-a118-a9744830192d');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["#row\n","df.iloc[3]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Bmv-iGHsD3XK","executionInfo":{"status":"ok","timestamp":1686731990166,"user_tz":-330,"elapsed":542,"user":{"displayName":"HARSH KUMAR SAHU 21BSA10163","userId":"03728819450456949834"}},"outputId":"3f917c65-d3ae-41c5-abb5-2b10678e7406"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["marksA     1\n","marksB    84\n","marksC    29\n","Name: 3, dtype: int64"]},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["#row and column\n","df.iloc[3][1]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CxC09nZTD98m","executionInfo":{"status":"ok","timestamp":1686732034407,"user_tz":-330,"elapsed":424,"user":{"displayName":"HARSH KUMAR SAHU 21BSA10163","userId":"03728819450456949834"}},"outputId":"dd938f8a-189f-49a1-f359-2f353e4a8e83"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["84"]},"metadata":{},"execution_count":21}]},{"cell_type":"code","source":["idx=[df.columns.get_loc('marksB'),df.columns.get_loc('marksC')]\n","print(idx)\n","df.iloc[3,idx]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9eCvynSmEEyL","executionInfo":{"status":"ok","timestamp":1686732176505,"user_tz":-330,"elapsed":743,"user":{"displayName":"HARSH KUMAR SAHU 21BSA10163","userId":"03728819450456949834"}},"outputId":"3073e482-72b3-4f43-b3b5-5d5fd01db1a0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[1, 2]\n"]},{"output_type":"execute_result","data":{"text/plain":["marksB    84\n","marksC    29\n","Name: 3, dtype: int64"]},"metadata":{},"execution_count":25}]},{"cell_type":"code","source":["#slicing\n","df.iloc[:3,idx]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"ggS4g9dtEXP-","executionInfo":{"status":"ok","timestamp":1686732502331,"user_tz":-330,"elapsed":4,"user":{"displayName":"HARSH KUMAR SAHU 21BSA10163","userId":"03728819450456949834"}},"outputId":"6545eb28-3d9d-4d76-ff3e-d7c135835613"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   marksB  marksC\n","0      82      38\n","1      69      35\n","2      51      37"],"text/html":["\n","  <div id=\"df-c828a6ab-354a-4f3f-bda0-ba6b2b8012dc\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>marksB</th>\n","      <th>marksC</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>82</td>\n","      <td>38</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>69</td>\n","      <td>35</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>51</td>\n","      <td>37</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c828a6ab-354a-4f3f-bda0-ba6b2b8012dc')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-c828a6ab-354a-4f3f-bda0-ba6b2b8012dc button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-c828a6ab-354a-4f3f-bda0-ba6b2b8012dc');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":26}]},{"cell_type":"code","source":["#sorting\n","my_data.sort_values(by=[\"marksC\",\"marksA\"],ascending =False)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"2DeQFpEDF78I","executionInfo":{"status":"ok","timestamp":1686732676408,"user_tz":-330,"elapsed":529,"user":{"displayName":"HARSH KUMAR SAHU 21BSA10163","userId":"03728819450456949834"}},"outputId":"49e9300c-acf8-44ef-d96c-c6f1e3e5784b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Unnamed: 0  marksA  marksB  marksC\n","0           0       5      82      38\n","2           2       1      51      37\n","1           1       6      69      35\n","3           3       1      84      29\n","4           4       4      99      28"],"text/html":["\n","  <div id=\"df-396fc640-0313-430e-be68-f9cf18df2ee1\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>marksA</th>\n","      <th>marksB</th>\n","      <th>marksC</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>5</td>\n","      <td>82</td>\n","      <td>38</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>51</td>\n","      <td>37</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>6</td>\n","      <td>69</td>\n","      <td>35</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>84</td>\n","      <td>29</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>99</td>\n","      <td>28</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-396fc640-0313-430e-be68-f9cf18df2ee1')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-396fc640-0313-430e-be68-f9cf18df2ee1 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-396fc640-0313-430e-be68-f9cf18df2ee1');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":28}]},{"cell_type":"code","source":["data_array=my_data.values\n","print(type(my_data))\n","print(my_data.shape)\n","print(data_array)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Kbdfv3xVISpY","executionInfo":{"status":"ok","timestamp":1686733208089,"user_tz":-330,"elapsed":3,"user":{"displayName":"HARSH KUMAR SAHU 21BSA10163","userId":"03728819450456949834"}},"outputId":"d3bca04c-ff10-4de9-b2f4-147a2773f080"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","(5, 4)\n","[[ 0  5 82 38]\n"," [ 1  6 69 35]\n"," [ 2  1 51 37]\n"," [ 3  1 84 29]\n"," [ 4  4 99 28]]\n"]}]},{"cell_type":"markdown","source":[],"metadata":{"id":"I8BZh2KhIno9"}},{"cell_type":"code","source":[],"metadata":{"id":"G7LIkeBYIoGh"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[" import pandas as pd\n"," import matplotlib.pyplot as plt"],"metadata":{"id":"ZsA6Cf1mKKas","executionInfo":{"status":"ok","timestamp":1686808766007,"user_tz":-330,"elapsed":462,"user":{"displayName":"HARSH KUMAR SAHU 21BSA10163","userId":"03728819450456949834"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7lyti1AvozkE","executionInfo":{"status":"ok","timestamp":1686808800052,"user_tz":-330,"elapsed":21540,"user":{"displayName":"HARSH KUMAR SAHU 21BSA10163","userId":"03728819450456949834"}},"outputId":"b15df63b-6bee-4034-981f-abf6873b79e2"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","source":["file_path = '/content/drive/MyDrive/Colab Notebooks/ml/mnist_train.csv'\n","df = pd.read_csv(file_path)"],"metadata":{"id":"OdjA6LcftXVB","executionInfo":{"status":"ok","timestamp":1686810045345,"user_tz":-330,"elapsed":7116,"user":{"displayName":"HARSH KUMAR SAHU 21BSA10163","userId":"03728819450456949834"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","source":["df.shape\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"f6izc_CltsWk","executionInfo":{"status":"ok","timestamp":1686810063326,"user_tz":-330,"elapsed":1128,"user":{"displayName":"HARSH KUMAR SAHU 21BSA10163","userId":"03728819450456949834"}},"outputId":"e1028635-7791-4d5a-d9fe-c8e7942590a9"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(60000, 785)"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["df.head(n=5)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":299},"id":"yjS4duMrtxi-","executionInfo":{"status":"ok","timestamp":1686810111469,"user_tz":-330,"elapsed":505,"user":{"displayName":"HARSH KUMAR SAHU 21BSA10163","userId":"03728819450456949834"}},"outputId":"1b06eff0-909c-4015-d013-539bb3fead66"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   label  1x1  1x2  1x3  1x4  1x5  1x6  1x7  1x8  1x9  ...  28x19  28x20  \\\n","0      5    0    0    0    0    0    0    0    0    0  ...      0      0   \n","1      0    0    0    0    0    0    0    0    0    0  ...      0      0   \n","2      4    0    0    0    0    0    0    0    0    0  ...      0      0   \n","3      1    0    0    0    0    0    0    0    0    0  ...      0      0   \n","4      9    0    0    0    0    0    0    0    0    0  ...      0      0   \n","\n","   28x21  28x22  28x23  28x24  28x25  28x26  28x27  28x28  \n","0      0      0      0      0      0      0      0      0  \n","1      0      0      0      0      0      0      0      0  \n","2      0      0      0      0      0      0      0      0  \n","3      0      0      0      0      0      0      0      0  \n","4      0      0      0      0      0      0      0      0  \n","\n","[5 rows x 785 columns]"],"text/html":["\n","  <div id=\"df-8866739e-50ae-4b0e-9331-74c2e4e23680\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>label</th>\n","      <th>1x1</th>\n","      <th>1x2</th>\n","      <th>1x3</th>\n","      <th>1x4</th>\n","      <th>1x5</th>\n","      <th>1x6</th>\n","      <th>1x7</th>\n","      <th>1x8</th>\n","      <th>1x9</th>\n","      <th>...</th>\n","      <th>28x19</th>\n","      <th>28x20</th>\n","      <th>28x21</th>\n","      <th>28x22</th>\n","      <th>28x23</th>\n","      <th>28x24</th>\n","      <th>28x25</th>\n","      <th>28x26</th>\n","      <th>28x27</th>\n","      <th>28x28</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>9</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 785 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8866739e-50ae-4b0e-9331-74c2e4e23680')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-8866739e-50ae-4b0e-9331-74c2e4e23680 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-8866739e-50ae-4b0e-9331-74c2e4e23680');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["print(type(df))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FlSOpnh6t9dV","executionInfo":{"status":"ok","timestamp":1686810213694,"user_tz":-330,"elapsed":644,"user":{"displayName":"HARSH KUMAR SAHU 21BSA10163","userId":"03728819450456949834"}},"outputId":"3d1fed10-9f97-451a-bf5f-1ef9320f7d07"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n"]}]},{"cell_type":"code","source":["data=df.values\n"],"metadata":{"id":"wU2f8HsauWOV","executionInfo":{"status":"ok","timestamp":1686810243927,"user_tz":-330,"elapsed":679,"user":{"displayName":"HARSH KUMAR SAHU 21BSA10163","userId":"03728819450456949834"}}},"execution_count":8,"outputs":[]},{"cell_type":"code","source":[" x=data[: ,1: ]\n"," y=data[ : ,0]"],"metadata":{"id":"yX5_0j88ubw2","executionInfo":{"status":"ok","timestamp":1686810639350,"user_tz":-330,"elapsed":382,"user":{"displayName":"HARSH KUMAR SAHU 21BSA10163","userId":"03728819450456949834"}}},"execution_count":9,"outputs":[]},{"cell_type":"code","source":["print(x.shape,y.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LiQFwqtMv8mM","executionInfo":{"status":"ok","timestamp":1686810660818,"user_tz":-330,"elapsed":564,"user":{"displayName":"HARSH KUMAR SAHU 21BSA10163","userId":"03728819450456949834"}},"outputId":"e83e2273-47e7-4434-bbca-f38876997eae"},"execution_count":10,"outputs":[{"output_type":"stream","name":"stdout","text":["(60000, 784) (60000,)\n"]}]},{"cell_type":"code","source":["#try to visualise one image\n","def draImg(x,y,i):\n","  plt.imshow(x[i].reshape(28,28),cmap='gray')\n","  plt.title(\"Label\"+str(y[i]))\n","  plt.show"],"metadata":{"id":"BBiRmWEnwGDX","executionInfo":{"status":"ok","timestamp":1686810910823,"user_tz":-330,"elapsed":445,"user":{"displayName":"HARSH KUMAR SAHU 21BSA10163","userId":"03728819450456949834"}}},"execution_count":16,"outputs":[]},{"cell_type":"code","source":["for i in range(1):\n","  draImg(x,y,i)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":452},"id":"gKBZsmNzwnqP","executionInfo":{"status":"ok","timestamp":1686810914052,"user_tz":-330,"elapsed":666,"user":{"displayName":"HARSH KUMAR SAHU 21BSA10163","userId":"03728819450456949834"}},"outputId":"6d66b22b-6de3-43a4-e5b4-9b20da672cd9"},"execution_count":17,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["split=int(0.8*x.shape[0])\n","print(split)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tBmX1IfyyJtU","executionInfo":{"status":"ok","timestamp":1686811258604,"user_tz":-330,"elapsed":593,"user":{"displayName":"HARSH KUMAR SAHU 21BSA10163","userId":"03728819450456949834"}},"outputId":"7dc8b02a-566a-4dba-fade-b9a7c126ae6a"},"execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["48000\n"]}]},{"cell_type":"code","source":["x_train,y_train=x[ :split, :], y[:split]\n","x_test,y_test=x[split: , :],y[split: ]\n","print(x_train.shape,y_train.shape)\n","print(x_test.shape,y_test.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iKhYxtIayZ7N","executionInfo":{"status":"ok","timestamp":1686811451259,"user_tz":-330,"elapsed":492,"user":{"displayName":"HARSH KUMAR SAHU 21BSA10163","userId":"03728819450456949834"}},"outputId":"4bd42b72-d8da-4acd-c2d8-98e2d3c132d8"},"execution_count":20,"outputs":[{"output_type":"stream","name":"stdout","text":["(48000, 784) (48000,)\n","(12000, 784) (12000,)\n"]}]},{"cell_type":"code","source":["#randomization\n","import numpy as np\n","a=np.array([1,2,3,4,5])\n","np.random.shuffle(a)\n","print(a)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XWKrZ9ryzMx0","executionInfo":{"status":"ok","timestamp":1686811585619,"user_tz":-330,"elapsed":439,"user":{"displayName":"HARSH KUMAR SAHU 21BSA10163","userId":"03728819450456949834"}},"outputId":"6d4547fb-6dfa-40b6-c4e3-939120d4bd73"},"execution_count":23,"outputs":[{"output_type":"stream","name":"stdout","text":["[5 4 3 2 1]\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"sqzs7E7k08gh"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#you can do this in given dataset also it will change graph\n","plt.figure(figsize=(10,10))\n","for i in range(25):\n","    plt.subplot(5,5,i+1)\n","    plt.imshow(x_train[i].reshape(28,28))\n","    plt.title(y_train[i])\n","    plt.axis(\"off\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":677},"id":"1XfXxUxazolM","executionInfo":{"status":"ok","timestamp":1686812025829,"user_tz":-330,"elapsed":2512,"user":{"displayName":"HARSH KUMAR SAHU 21BSA10163","userId":"03728819450456949834"}},"outputId":"e62816cc-c7f4-41f7-8a9a-274b9fd54572"},"execution_count":26,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x1000 with 25 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":[],"metadata":{"id":"G6c02RF21RnA"},"execution_count":null,"outputs":[]}]}